// S·ª≠ d·ª•ng link Apps Script Web App c·ªßa b·∫°n!
const API_BASE = "https://script.google.com/macros/s/AKfycbwfsTcpgpduAP6bsQnDu1vsUTzMrtYNRMyZLsqKDJu-5j910xP69GXmdS1OaOAdKbNJ/exec";


// --- Drop-in limiter for fetch: queue + retry + small cache ---
// (() => {
//   const origFetch = window.fetch.bind(window);

//   // C·∫•u h√¨nh nh·∫π
//   const MAX_CONCURRENCY = 3;     // ch·∫°y song song t·ªëi ƒëa
//   const MIN_INTERVAL_MS = 150;   // gi√£n c√°ch gi·ªØa 2 l∆∞·ª£t l·∫•y t·ª´ h√†ng ƒë·ª£i
//   const RETRIES = 2;             // retry khi l·ªói m·∫°ng / 429
//   const RETRY_BASE_MS = 400;     // backoff c∆° b·∫£n
//   const CACHE_TTL_MS = 30_000;   // cache GET 30s ƒë·ªÉ ch·ªëng g·ªçi l·∫∑p

//   const cache = new Map(); // key: URL, val: {ts, jsonPromise}
//   const q = [];
//   let active = 0, lastDeq = 0;

//   async function limitedFetch(input, init) {
//     // Cache GET trong 30s (login/register l√† GET hi·ªán t·∫°i)
//     const method = (init && init.method) ? init.method.toUpperCase() : 'GET';
//     const url = (typeof input === 'string' ? input : input.url);

//     if (method === 'GET' && CACHE_TTL_MS > 0) {
//       const c = cache.get(url);
//       const now = Date.now();
//       if (c && (now - c.ts) < CACHE_TTL_MS) return c.jsonPromise.then(data => new Response(new Blob([JSON.stringify(data)]), {headers: {'Content-Type':'application/json'}}));
//     }

//     // ƒê∆∞a v√†o h√†ng ƒë·ª£i
//     return new Promise((resolve, reject) => {
//       q.push({ input, init, resolve, reject, attempt: 0 });
//       pump();
//     });

//     function pump() {
//       if (!q.length) return;
//       const now = Date.now();
//       if (active >= MAX_CONCURRENCY || (now - lastDeq) < MIN_INTERVAL_MS) {
//         setTimeout(pump, MIN_INTERVAL_MS);
//         return;
//       }
//       lastDeq = now;
//       const task = q.shift();
//       active++;
//       doFetch(task).finally(() => { active--; pump(); });
//     }

//     async function doFetch(task) {
//       try {
//         const res = await origFetch(task.input, task.init);
//         // Th·ª≠ backoff m·ªÅm n·∫øu b·ªã 429 ho·∫∑c l·ªói t·∫°m th·ªùi
//         if ((res.status === 429 || res.status === 503) && task.attempt < RETRIES) {
//           task.attempt++;
//           const wait = RETRY_BASE_MS * Math.pow(2, task.attempt - 1);
//           await new Promise(r => setTimeout(r, wait));
//           return doFetch(task);
//         }
//         // Cache JSON c·ªßa GET
//         if (method === 'GET' && res.ok && res.headers.get('Content-Type')?.includes('application/json')) {
//           const jsonPromise = res.clone().json();
//           cache.set(url, { ts: Date.now(), jsonPromise });
//         }
//         task.resolve(res);
//       } catch (err) {
//         if (task.attempt < RETRIES) {
//           task.attempt++;
//           const wait = RETRY_BASE_MS * Math.pow(2, task.attempt - 1);
//           await new Promise(r => setTimeout(r, wait));
//           return doFetch(task);
//         }
//         task.reject(err);
//       }
//     }
//   }

//   window.fetch = limitedFetch;
// })();




async function login(sdt, password) {
  const url = `${API_BASE}?func=Login&sdt=${encodeURIComponent(sdt)}&password=${encodeURIComponent(password)}`;
  const res = await fetch(url);
  return await res.json();
}
// async function register(user) {
//   const url = `${API_BASE}?func=Register&ho_ten=${encodeURIComponent(user.ho_ten)}&sdt=${encodeURIComponent(user.sdt)}&password=${encodeURIComponent(user.password)}&ma_truong=${encodeURIComponent(user.ma_truong)}&loai_user=${encodeURIComponent(user.loai_user)}`;
//   const res = await fetch(url);
//   return await res.json();
// }

async function register(user) {
  // S·ª≠a loai_user th√†nh phan_quyen
  const url = `${API_BASE}?func=Register&ho_ten=${encodeURIComponent(user.ho_ten)}&sdt=${encodeURIComponent(user.sdt)}&password=${encodeURIComponent(user.password)}&ma_truong=${encodeURIComponent(user.ma_truong)}&phan_quyen=${encodeURIComponent(user.phan_quyen)}&lop_hoc=${encodeURIComponent(user.lop_hoc || "")}`; // <-- S·ª¨A ·ªû ƒê√ÇY
  const res = await fetch(url);
  return await res.json();
}
async function forgotPassword(sdt) {
  const url = `${API_BASE}?func=ForgotPassword&sdt=${encodeURIComponent(sdt)}`;
  const res = await fetch(url);
  return await res.json();
}

// API l·∫•y to√†n b·ªô danh s√°ch h·ªçc sinh
async function getAllDanhSachHocsinh(ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetAllDanhSachHocsinh&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// L·∫•y danh s√°ch h·ªçc sinh ph√¢n trang + t√¨m ki·∫øm + sort
async function getDanhSachHocsinhPaginated(ma_truong, lop_hoc, start = 0, limit = 10, query = "", sortField = "", sortDir = 1) {
  const url = `${API_BASE}?func=GetDanhSachHocsinhPaginated`
    + `&ma_truong=${encodeURIComponent(ma_truong)}`
    + `&lop_hoc=${encodeURIComponent(lop_hoc)}`
    + `&start=${start}`
    + `&limit=${limit}`
    + `&query=${encodeURIComponent(query)}`
    + `&sortField=${encodeURIComponent(sortField)}`
    + `&sortDir=${sortDir}`;
  const res = await fetch(url);
  return await res.json();
}

// Th√™m h·ªçc sinh ƒë∆°n l·∫ª
async function themHocsinh(hs) {
  const url = `${API_BASE}?func=ThemHocsinh`
    + `&ma_so_bhxh=${encodeURIComponent(hs.ma_so_bhxh)}`
    + `&ho_ten_hoc_sinh=${encodeURIComponent(hs.ho_ten_hoc_sinh)}`
    + `&ngay_sinh=${encodeURIComponent(hs.ngay_sinh)}`
    + `&gioi_tinh=${encodeURIComponent(hs.gioi_tinh)}`
    + `&dia_chi=${encodeURIComponent(hs.dia_chi)}`
    + `&ngay_het_han_bhyt=${encodeURIComponent(hs.ngay_het_han_bhyt)}`
    + `&ngay_het_han_bhtn=${encodeURIComponent(hs.ngay_het_han_bhtn)}`
    + `&lop_hoc=${encodeURIComponent(hs.lop_hoc)}`
    + `&sdt_lienhe=${encodeURIComponent(hs.sdt_lienhe)}`
    + `&so_dinh_danh=${encodeURIComponent(hs.so_dinh_danh)}`
    + `&noi_kham_bhyt=${encodeURIComponent(hs.noi_kham_bhyt)}`
    + `&ten_cha_me=${encodeURIComponent(hs.ten_cha_me)}`
    + `&doi_tuong_dong=${encodeURIComponent(hs.doi_tuong_dong ?? "null")}`
    + `&ghi_chu=${encodeURIComponent(hs.ghi_chu ?? "null")}`
    + `&ma_truong=${encodeURIComponent(hs.ma_truong)}`;
  const res = await fetch(url);
  return await res.json();
}

// Import t·ª´ng d√≤ng (gi·ªØ nguy√™n chi·∫øn l∆∞·ª£c)
async function importDanhSachHocsinh(listHS) {
  let okCount = 0, failCount = 0, errors = [];
  for (const hs of listHS) {
    const url = `${API_BASE}?func=ThemHocsinh`
      + `&ma_so_bhxh=${encodeURIComponent(hs.ma_so_bhxh)}`
      + `&ho_ten_hoc_sinh=${encodeURIComponent(hs.ho_ten_hoc_sinh)}`
      + `&ngay_sinh=${encodeURIComponent(hs.ngay_sinh)}`
      + `&gioi_tinh=${encodeURIComponent(hs.gioi_tinh)}`
      + `&dia_chi=${encodeURIComponent(hs.dia_chi)}`
      + `&ngay_het_han_bhyt=${encodeURIComponent(hs.ngay_het_han_bhyt)}`
      + `&ngay_het_han_bhtn=${encodeURIComponent(hs.ngay_het_han_bhtn)}`
      + `&lop_hoc=${encodeURIComponent(hs.lop_hoc)}`
      + `&sdt_lienhe=${encodeURIComponent(hs.sdt_lienhe)}`
      + `&so_dinh_danh=${encodeURIComponent(hs.so_dinh_danh)}`
      + `&noi_kham_bhyt=${encodeURIComponent(hs.noi_kham_bhyt)}`
      + `&ten_cha_me=${encodeURIComponent(hs.ten_cha_me)}`
      + `&doi_tuong_dong=${encodeURIComponent(hs.doi_tuong_dong ?? "null")}`
      + `&ghi_chu=${encodeURIComponent(hs.ghi_chu ?? "null")}`
      + `&ma_truong=${encodeURIComponent(hs.ma_truong)}`;
    try {
      const res = await fetch(url);
      const json = await res.json();
      if (json.success) okCount++;
      else { failCount++; errors.push(json.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"); }
    } catch (err) {
      failCount++; errors.push(err.message);
    }
    await sleep(150); // üëà gi√£n 150ms gi·ªØa m·ªói request
  }
  if (failCount === 0) return { success: true, imported: okCount };
  else return { success: false, imported: okCount, errors };
}

// S·ª≠a h·ªçc sinh
async function suaHocsinh(hs) {
  const url = `${API_BASE}?func=UpdateHocsinh`
    + `&stt=${encodeURIComponent(hs.stt)}`
    + `&ma_so_bhxh=${encodeURIComponent(hs.ma_so_bhxh)}`
    + `&ho_ten_hoc_sinh=${encodeURIComponent(hs.ho_ten_hoc_sinh)}`
    + `&ngay_sinh=${encodeURIComponent(hs.ngay_sinh)}`
    + `&gioi_tinh=${encodeURIComponent(hs.gioi_tinh)}`
    + `&dia_chi=${encodeURIComponent(hs.dia_chi)}`
    + `&ngay_het_han_bhyt=${encodeURIComponent(hs.ngay_het_han_bhyt)}`
    + `&ngay_het_han_bhtn=${encodeURIComponent(hs.ngay_het_han_bhtn)}`
    + `&lop_hoc=${encodeURIComponent(hs.lop_hoc)}`
    + `&sdt_lienhe=${encodeURIComponent(hs.sdt_lienhe)}`
    + `&so_dinh_danh=${encodeURIComponent(hs.so_dinh_danh)}`
    + `&noi_kham_bhyt=${encodeURIComponent(hs.noi_kham_bhyt)}`
    + `&ten_cha_me=${encodeURIComponent(hs.ten_cha_me)}`
    + `&doi_tuong_dong=${encodeURIComponent(hs.doi_tuong_dong ?? "null")}`
    + `&ghi_chu=${encodeURIComponent(hs.ghi_chu ?? "null")}`
    + `&ma_truong=${encodeURIComponent(hs.ma_truong)}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a h·ªçc sinh (theo stt ho·∫∑c s·ªë ƒë·ªãnh danh)
async function xoaHocsinh(id) {
  const url = `${API_BASE}?func=DeleteHocsinh&id=${encodeURIComponent(id)}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a nhi·ªÅu h·ªçc sinh
async function xoaNhieuHocsinh(ids) {
  const url = `${API_BASE}?func=DeleteManyHocsinh&ids=${encodeURIComponent(ids.join(","))}`;
  const res = await fetch(url);
  return await res.json();
}

/* ====== BHYT: gi·ªØ nguy√™n c√°c h√†m ph√≠a d∆∞·ªõi n·∫øu ƒë√£ ch·∫°y t·ªët ====== */
// ... (kh√¥ng thay ƒë·ªïi ph·∫ßn BHYT hi·ªán c√≥)











// L·∫•y danh s√°ch BHYT theo tr∆∞·ªùng/l·ªõp (tr·∫£ ƒë·ªß c·ªôt, c√≥ so_ho_so)
async function getDanhSachBHYT(ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetDanhSachBHYT&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// Tr·∫°ng th√°i BHYT theo HS
async function getBHYTStatus(so_dinh_danh, ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetBHYTStatus&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// (T√πy n∆°i g·ªçi) n·ªôp h·ªì s∆° qua GET param
async function nopHoSoBHYT(payload) {
  const params = Object.entries(payload).map(([k,v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=NopHoSoBHYT&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// S·ª≠a h·ªì s∆° qua GET param
async function suaHoSoBHYT(payload) {
  const params = Object.entries(payload).map(([k,v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=SuaHoSoBHYT&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// L·∫•y h·ªì s∆° BHYT theo HS
async function getHosoBHYTByHS(so_dinh_danh, ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetHosoBHYTByHS&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// (Gi·ªØ l·∫°i) H√†m POST c≈© ‚Äî backend ch∆∞a implement; ch·ªâ d√πng n·∫øu b·∫°n b·ªï sung route POST t∆∞∆°ng ·ª©ng
async function nopBHYTHoSo({ so_dinh_danh, noi_kham, so_thang_dong, user_info }) {
  const res = await fetch(`${API_BASE}?func=NopBHYTHoSo`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ so_dinh_danh, noi_kham, so_thang_dong, user_info })
  });
  return await res.json();
}


// X√≥a h·ªì s∆° BHYT theo so_dinh_danh + ma_truong + lop_hoc (d√πng cho "Ch∆∞a thu" khi h·ªì s∆° ƒëang ch·ªù duy·ªát)
async function deleteBHYTByKey({ so_dinh_danh, ma_truong, lop_hoc, phan_quyen = "" }) {
  const url = `${API_BASE}?func=DeleteBHYT`
    + `&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}`
    + `&ma_truong=${encodeURIComponent(ma_truong)}`
    + `&lop_hoc=${encodeURIComponent(lop_hoc)}`
    + `&phan_quyen=${encodeURIComponent(phan_quyen)}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a h·ªì s∆° BHYT theo stt (d√πng cho ‚Äúƒê√£ thu‚Äù)
async function deleteBHYTByStt(stt, phan_quyen = "") {
  const url = `${API_BASE}?func=DeleteBHYTByStt`
    + `&stt=${encodeURIComponent(stt)}`
    + `&phan_quyen=${encodeURIComponent(phan_quyen)}`;
  const res = await fetch(url);
  return await res.json();
}














/* ====== BHTN: API t∆∞∆°ng th√≠ch model/controller m·ªõi ====== */

// L·∫•y danh s√°ch BHTN theo tr∆∞·ªùng/l·ªõp
async function getDanhSachBHTN(ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetDanhSachBHTN&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// Tr·∫°ng th√°i BHTN theo HS (ƒë√£ ƒë√≥ng/ch∆∞a ƒë√≥ng)
async function getBHTNStatus(so_dinh_danh, ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetBHTNStatus&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// L·∫•y h·ªì s∆° BHTN theo HS (1 h·ªçc sinh)
async function getHosoBHTNByHS(so_dinh_danh, ma_truong, lop_hoc) {
  const url = `${API_BASE}?func=GetHosoBHTNByHS&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}&ma_truong=${encodeURIComponent(ma_truong)}&lop_hoc=${encodeURIComponent(lop_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// B·∫£ng gi√° BHTN (12 th√°ng)
async function getGiaBHTN() {
  const url = `${API_BASE}?func=GetGiaBHTN`;
  const res = await fetch(url);
  return await res.json();
}


// Helper b√≥c payload b·∫£ng gi√° BHTN th√†nh object
function normalizeGiaBHTNResponse(res){
  if (!res) return {};
  const d = (res.data !== undefined) ? res.data : res;
  if (Array.isArray(d)) return d[0] || {};
  return d || {};
}




/**
 * N·ªôp h·ªì s∆° BHTN (t·∫°o m·ªõi/ghi ƒë√® n·∫øu ƒë√£ t·ªìn t·∫°i theo so_dinh_danh + l·ªõp + tr∆∞·ªùng)
 * L∆∞u √Ω:
 *  - ma_so_bhtn c√≥ th·ªÉ r·ªóng (admin k√≠ch ho·∫°t sau).
 *  - so_thang_dong c·ªë ƒë·ªãnh 12 ·ªü backend (kh√¥ng c·∫ßn g·ª≠i).
 *  - KH√îNG c√≥ tr∆∞·ªùng noi_kham_bhyt.
 *  - c√≥ th·ªÉ truy·ªÅn so_tien/hoa_hong ƒë·ªÉ override, n·∫øu kh√¥ng backend s·∫Ω l·∫•y theo Gia_BHTN.
 */
async function nopHoSoBHTN(payload) {
  const qs = Object.entries(payload).map(([k, v]) =>
    `${encodeURIComponent(k)}=${encodeURIComponent(v ?? "")}`
  ).join("&");
  const url = `${API_BASE}?func=NopHoSoBHTN&${qs}`;
  const res = await fetch(url);
  return await res.json();
}

/**
 * S·ª≠a h·ªì s∆° BHTN
 *  - N·∫øu kh√¥ng mu·ªën thay ƒë·ªïi ma_so_bhtn, c√≥ th·ªÉ KH√îNG g·ª≠i field n√†y.
 *  - Backend s·∫Ω t√≠nh l·∫°i h·∫°n 12 th√°ng d·ª±a tr√™n ngay_het_han_bhtn_cu n·∫øu b·∫°n g·ª≠i c·∫≠p nh·∫≠t.
 */
async function suaHoSoBHTN(payload) {
  const qs = Object.entries(payload).map(([k, v]) =>
    `${encodeURIComponent(k)}=${encodeURIComponent(v ?? "")}`
  ).join("&");
  const url = `${API_BASE}?func=SuaHoSoBHTN&${qs}`;
  const res = await fetch(url);
  return await res.json();
}




// X√≥a h·ªì s∆° BHTN theo so_dinh_danh + ma_truong + lop_hoc (d√πng cho "Ch∆∞a thu" khi h·ªì s∆° ƒëang ch·ªù duy·ªát)
async function deleteBHTNByKey({ so_dinh_danh, ma_truong, lop_hoc, phan_quyen = "" }) {
  const url = `${API_BASE}?func=DeleteBHTN`
    + `&so_dinh_danh=${encodeURIComponent(so_dinh_danh)}`
    + `&ma_truong=${encodeURIComponent(ma_truong)}`
    + `&lop_hoc=${encodeURIComponent(lop_hoc)}`
    + `&phan_quyen=${encodeURIComponent(phan_quyen)}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a h·ªì s∆° BHTN theo stt (d√πng cho ‚Äúƒê√É THU‚Äù)
async function deleteBHTNByStt(stt, phan_quyen = "") {
  const url = `${API_BASE}?func=DeleteBHTNByStt`
    + `&stt=${encodeURIComponent(stt)}`
    + `&phan_quyen=${encodeURIComponent(phan_quyen)}`;
  const res = await fetch(url);
  return await res.json();
}











/* ====== S·ª®C KH·ªéE H·ªåC SINH ====== */

// L·∫•y h·ªì s∆° kh√°m SK theo m√£ s·ªë BHXH v√† nƒÉm h·ªçc
async function getSucKhoeRecord(ma_so_bhxh, nam_hoc) {
  const url = `${API_BASE}?func=GetSucKhoeRecord&ma_so_bhxh=${encodeURIComponent(ma_so_bhxh)}&nam_hoc=${encodeURIComponent(nam_hoc)}`;
  const res = await fetch(url);
  return await res.json();
}

// Th√™m h·ªì s∆° kh√°m SK m·ªõi
async function addSucKhoeRecord(recordData) {
  const params = Object.entries(recordData).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=AddSucKhoeRecord&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// C·∫≠p nh·∫≠t h·ªì s∆° kh√°m SK (c·∫ßn _rowIndex)
async function updateSucKhoeRecord(recordData) {
   const params = Object.entries(recordData).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=UpdateSucKhoeRecord&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a h·ªì s∆° kh√°m SK (c·∫ßn _rowIndex)
async function deleteSucKhoeRecord(rowIndex) {
  const url = `${API_BASE}?func=DeleteSucKhoeRecord&_rowIndex=${encodeURIComponent(rowIndex)}`;
  const res = await fetch(url);
  return await res.json();
}

// L·∫•y danh s√°ch s·ª± ki·ªán SK theo m√£ s·ªë BHXH
async function getSucKhoeEvents(ma_so_bhxh) {
  const url = `${API_BASE}?func=GetSucKhoeEvents&ma_so_bhxh=${encodeURIComponent(ma_so_bhxh)}`;
  const res = await fetch(url);
  return await res.json();
}

// Th√™m s·ª± ki·ªán SK m·ªõi
async function addSucKhoeEvent(eventData) {
   const params = Object.entries(eventData).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=AddSucKhoeEvent&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// C·∫≠p nh·∫≠t s·ª± ki·ªán SK (c·∫ßn _rowIndex)
async function updateSucKhoeEvent(eventData) {
   const params = Object.entries(eventData).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');
  const url = `${API_BASE}?func=UpdateSucKhoeEvent&${params}`;
  const res = await fetch(url);
  return await res.json();
}

// X√≥a s·ª± ki·ªán SK (c·∫ßn _rowIndex)
async function deleteSucKhoeEvent(rowIndex) {
   const url = `${API_BASE}?func=DeleteSucKhoeEvent&_rowIndex=${encodeURIComponent(rowIndex)}`;
  const res = await fetch(url);
  return await res.json();
}
/* ====== S·ª®C KH·ªéE H·ªåC SINH ====== */






// --- API cho Qu·∫£n l√Ω User (Gi√°o vi√™n) ---

/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng (s·∫Ω l·ªçc ph√≠a client).
 * @returns {Promise<object>} K·∫øt qu·∫£ t·ª´ backend ({success: boolean, data?: Array}).
 */
async function listUsers() {
  const url = `${API_BASE}?func=ListUsers`; // Ho·∫∑c func=UserList t√πy theo main.gs
  try {
    const res = await fetch(url);
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    return await res.json();
  } catch (error) {
    console.error("API Error - listUsers:", error);
    return { success: false, message: "L·ªói k·∫øt n·ªëi khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng." };
  }
}


/**
 * C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng (gi√°o vi√™n).
 * @param {object} userData ƒê·ªëi t∆∞·ª£ng ch·ª©a th√¥ng tin c·∫≠p nh·∫≠t.
 * Ph·∫£i bao g·ªìm 'sdt_key' (SƒêT hi·ªán t·∫°i ƒë·ªÉ t√¨m user)
 * v√† c√°c tr∆∞·ªùng c·∫ßn ƒë·ªïi: 'ho_ten', 'sdt' (SƒêT m·ªõi), 'password' (m·∫≠t kh·∫©u m·ªõi, n·∫øu c√≥), 'lop_hoc'.
 * @returns {Promise<object>} K·∫øt qu·∫£ t·ª´ backend ({success: boolean, message?: string}).
 */
async function updateUser(userData) {
  // ƒê·∫£m b·∫£o userData c√≥ sdt_key
  if (!userData || !userData.sdt_key) {
    console.error("updateUser thi·∫øu sdt_key");
    return { success: false, message: "Thi·∫øu th√¥ng tin ƒë·ªãnh danh ng∆∞·ªùi d√πng." };
  }
  const params = Object.entries(userData)
    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v ?? "")}`) // G·ª≠i c·∫£ gi√° tr·ªã r·ªóng n·∫øu c√≥ (vd: password r·ªóng l√† kh√¥ng ƒë·ªïi)
    .join('&');
  const url = `${API_BASE}?func=UpdateUser&${params}`; // *** Endpoint m·ªõi c·∫ßn t·∫°o: func=UpdateUser ***
  try {
    const res = await fetch(url);
    if (!res.ok) { // Th√™m ki·ªÉm tra l·ªói HTTP
        throw new Error(`HTTP error! status: ${res.status}`);
    }
    return await res.json();
  } catch (error) {
    console.error("API Error - updateUser:", error);
    return { success: false, message: "L·ªói k·∫øt n·ªëi khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng." };
  }
}

/**
 * X√≥a ng∆∞·ªùi d√πng (gi√°o vi√™n) d·ª±a tr√™n s·ªë ƒëi·ªán tho·∫°i.
 * @param {string} sdt S·ªë ƒëi·ªán tho·∫°i c·ªßa ng∆∞·ªùi d√πng c·∫ßn x√≥a.
 * @returns {Promise<object>} K·∫øt qu·∫£ t·ª´ backend ({success: boolean, message?: string}).
 */
async function deleteUser(sdt) {
  if (!sdt) {
     console.error("deleteUser thi·∫øu sdt");
     return { success: false, message: "Thi·∫øu s·ªë ƒëi·ªán tho·∫°i c·∫ßn x√≥a." };
  }
  const url = `${API_BASE}?func=DeleteUser&sdt=${encodeURIComponent(sdt)}`; // *** Endpoint m·ªõi c·∫ßn t·∫°o: func=DeleteUser ***
  try {
    const res = await fetch(url);
     if (!res.ok) { // Th√™m ki·ªÉm tra l·ªói HTTP
        throw new Error(`HTTP error! status: ${res.status}`);
    }
    return await res.json();
  } catch (error) {
    console.error("API Error - deleteUser:", error);
    return { success: false, message: "L·ªói k·∫øt n·ªëi khi x√≥a ng∆∞·ªùi d√πng." };
  }
}

// L∆∞u √Ω: H√†m register() ƒë√£ c√≥ s·∫µn trong api.js c·ªßa b·∫°n.